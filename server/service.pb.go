// Code generated by protoc-gen-go.
// source: src/github.com/henrikssn/stored/server/service.proto
// DO NOT EDIT!

/*
Package server is a generated protocol buffer package.

It is generated from these files:
	src/github.com/henrikssn/stored/server/service.proto

It has these top-level messages:
	Request
	Response
*/
package server

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Operation int32

const (
	Operation_GET Operation = 1
	Operation_PUT Operation = 2
	Operation_DEL Operation = 3
	Operation_NOP Operation = 4
)

var Operation_name = map[int32]string{
	1: "GET",
	2: "PUT",
	3: "DEL",
	4: "NOP",
}
var Operation_value = map[string]int32{
	"GET": 1,
	"PUT": 2,
	"DEL": 3,
	"NOP": 4,
}

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}
func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}
func (x *Operation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Operation_value, data, "Operation")
	if err != nil {
		return err
	}
	*x = Operation(value)
	return nil
}

type Response_Status int32

const (
	Response_UNEXPECTED Response_Status = 0
	Response_OK         Response_Status = 1
	Response_NOT_FOUND  Response_Status = 2
)

var Response_Status_name = map[int32]string{
	0: "UNEXPECTED",
	1: "OK",
	2: "NOT_FOUND",
}
var Response_Status_value = map[string]int32{
	"UNEXPECTED": 0,
	"OK":         1,
	"NOT_FOUND":  2,
}

func (x Response_Status) Enum() *Response_Status {
	p := new(Response_Status)
	*p = x
	return p
}
func (x Response_Status) String() string {
	return proto.EnumName(Response_Status_name, int32(x))
}
func (x *Response_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Status_value, data, "Response_Status")
	if err != nil {
		return err
	}
	*x = Response_Status(value)
	return nil
}

type Request struct {
	Tag              *int64     `protobuf:"varint,1,opt,name=tag" json:"tag,omitempty"`
	Op               *Operation `protobuf:"varint,2,opt,name=op,enum=server.Operation" json:"op,omitempty"`
	Key              *string    `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	SubKey           *string    `protobuf:"bytes,4,opt,name=sub_key" json:"sub_key,omitempty"`
	Value            []byte     `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetTag() int64 {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return 0
}

func (m *Request) GetOp() Operation {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return Operation_GET
}

func (m *Request) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Request) GetSubKey() string {
	if m != nil && m.SubKey != nil {
		return *m.SubKey
	}
	return ""
}

func (m *Request) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Response struct {
	Tag              *int64           `protobuf:"varint,1,opt,name=tag" json:"tag,omitempty"`
	Status           *Response_Status `protobuf:"varint,2,opt,name=status,enum=server.Response_Status" json:"status,omitempty"`
	Key              *string          `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	SubKey           *string          `protobuf:"bytes,4,opt,name=sub_key" json:"sub_key,omitempty"`
	Value            []byte           `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

func (m *Response) GetTag() int64 {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return 0
}

func (m *Response) GetStatus() Response_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Response_UNEXPECTED
}

func (m *Response) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Response) GetSubKey() string {
	if m != nil && m.SubKey != nil {
		return *m.SubKey
	}
	return ""
}

func (m *Response) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("server.Operation", Operation_name, Operation_value)
	proto.RegisterEnum("server.Response_Status", Response_Status_name, Response_Status_value)
}
